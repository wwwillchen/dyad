name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: '0.5.30'

      - name: Initialize environment
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: yarn
          cache-dependency-path: yarn.lock
      - name: Install node modules
        run: yarn install --frozen-lockfile
      - name: Pre-commit hook
        # Note:  Requires yarn to be installed
        uses: pre-commit/action@646c83fcd040023954eafda54b4db0192ce70507 # v3.0.0
      - name: Build FE
        run: yarn build
      - name: Typescript type-checking
        run: yarn typecheck:ts
      - name: Python type-checking
        run: ./scripts/py_typecheck.sh
      - name: Python unit tests
        run: yarn test:py
      - name: Install Chromium browser for Playwright
        run: yarn playwright install chromium --with-deps
      - name: Playwright tests
        run: yarn playwright test
      - uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        if: failure()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 3

  # Deploy docs
  deploy-docs:
    # Only deploy docs if we're pushing to main (see on.push.branches)
    if: github.event_name == 'push'
    # Need write permission to push to gh-pages branch
    permissions:
      contents: write
    # Only deploy docs if test passes
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4.7.1
        with:
          python-version: 3.10.13
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: '0.5.30'
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - run: uv run mkdocs gh-deploy --force
